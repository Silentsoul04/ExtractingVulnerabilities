CWE-178: Improper Handling of Case Sensitivity
Description
CWE Version 4.2
CWE-178: Improper Handling of Case Sensitivity
  
The software does not properly account for differences in case sensitivity when accessing or determining the properties of a resource, leading to inconsistent results.
Extended Description
Improperly handled case sensitive data can lead to several possible consequences, including:
• case-insensitive passwords reducing the size of the key space, making brute force attacks easier
• bypassing filters or access controls using alternate names
• multiple interpretation errors using alternate names.
Relationships
The table(s) below shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOr and give insight to similar items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that may want to be explored.
Relevant to the view "Research Concepts" (CWE-1000)
 
Nature Type
ChildOf PeerOf CanPrecede CanPrecede
ID Name Page
706 Use of Incorrectly-Resolved Name or Reference 1363 1289 Improper Validation of Unsafe Equivalence in Input 1852
                       289 Authentication Bypass by Alternate Name 433 Unparsed Raw Web Content Delivery
640 936
Page
1363
Page
1882
                Relevant to the view "Weaknesses for Simplified Mapping of Published Vulnerabilities" (CWE-1003)
Nature Type ID Name
ChildOf 706 Use of Incorrectly-Resolved Name or Reference
Relevant to the view "Software Development" (CWE-699)
Nature Type ID Name
  
       
 MemberOf
Applicable Platforms
19 Data Processing Errors
     Language : Language-Independent (Prevalence = Undetermined) Common Consequences
Scope Impact
Access Control Bypass Protection Mechanism
Potential Mitigations
Phase: Architecture and Design
Strategy = Input Validation
Likelihood
   Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names.
Phase: Implementation
Strategy = Input Validation
Assume all input is malicious. Use an "accept known good" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, "boat" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as "red" or "blue." Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.
Phase: Implementation
Strategy = Input Validation
Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked. 
Observed Examples
CVE-2000-0497 The server is case sensitive, so filetype handlers treat .jsp and .JSP as different extensions. JSP source code may be read because .JSP defaults to
the filetype "text".
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0497
CVE-2000-0498 The server is case sensitive, so filetype handlers treat .jsp and .JSP as different extensions. JSP source code may be read because .JSP defaults to
the filetype "text".
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0498
CVE-2001-0766 A URL that contains some characters whose case is not matched by the server's filters may bypass access restrictions because the case-insensitive file
system will then handle the request after it bypasses the case sensitive filter.
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0766
CVE-2001-0795 Server allows remote attackers to obtain source code of CGI scripts via URLs that contain MS-DOS conventions such as (1) upper case letters or (2) 8.3 file
names.
CVE-2001-1238 Task Manager does not allow local users to end processes with uppercase letters named (1) winlogon.exe, (2) csrss.exe, (3) smss.exe and (4)
services.exe via the Process tab which could allow local users to install Trojan horses that cannot be stopped. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1238
CVE-2003-0411 chain: Code was ported from a case-sensitive Unix platform to a case- insensitive Windows platform where filetype handlers treat .jsp and .JSP as
different extensions. JSP source code may be read because .JSP defaults to the filetype "text".
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0411
CVE-2002-0485 CVE-1999-0239
Leads to interpretation error
    
CVE-2005-0269 File extension check in forum software only verifies extensions that contain all lowercase letters, which allows remote attackers to upload arbitrary files via file
extensions that include uppercase letters.
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0269
CVE-2004-1083 Web server restricts access to files in a case sensitive manner, but the filesystem accesses files in a case insensitive manner, which allows remote
attackers to read privileged files using alternate capitalization.
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-1083
CVE-2002-2119 CVE-2004-2214 CVE-2004-2154 CVE-2005-4509 CVE-2002-1820
CVE-2007-3365
Functional Areas
• File Processing
Affected Resources
• File or Directory
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0485
Directories may be listed because lower case web requests are not properly handled by the server. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-0239
Case insensitive passwords lead to search space reduction.
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-2119
HTTP server allows bypass of access restrictions using URIs with mixed case.
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-2214
Mixed upper/lowercase allows bypass of ACLs.
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-2154
Bypass malicious script detection by using tokens that aren't case sensitive.
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-4509
Mixed case problem allows "admin" to have "Admin" rights (alternate name property).
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1820
Chain: uppercase file extensions causes web server to return script source code instead of executing the script. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-3365
                      MemberOf Relationships
This MemberOf relationships table shows additional CWE Catgeories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness fits within the context of external information sources.
Nature Type ID Name Page
 
 MemberOf
Notes
992 SFP Secondary Cluster: Faulty Input Transformation
888 1988
      Research Gap
 415
CWE-178: Improper Handling of Case Sensitivity
Mapped Taxonomy Name
Node ID
Fit
Mapped Node Name
Abstraction : Base
 
Nature Type ID Name   Page
Nature Type ID Name   Page
Scope Impact   Likelihood
Access Control Integrity
Bypass Protection Mechanism
Execute Unauthorized Code or Commands
An attacker could include dangerous input that bypasses validation protection mechanisms which can be used to launch various attacks including injection attacks, execute arbitrary code or cause other unintended behavior.
CWE Version 4.2
CWE-179: Incorrect Behavior Order: Early Validation
These are probably under-studied in Windows and Mac environments, where file names are case-insensitive and thus are subject to equivalence manipulations involving case.
Taxonomy Mappings
PLOVER Case Sensitivity (lowercase, uppercase, mixed case)