CWE-172: Encoding Error
Description
 The software does not properly encode or decode the data, resulting in unexpected values.
Relationships
The table(s) below shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOr and give insight to similar items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that may want to be explored.
Relevant to the view "Research Concepts" (CWE-1000)
 
Nature
ChildOf ParentOf ParentOf ParentOf ParentOf ParentOf CanPrecede
CanPrecede
Type ID
      707
      173
      174
      175
      176
      177
      22
41
Name Page
Improper Neutralization 1365 Improper Handling of Alternate Encoding 403 Double Decoding of the Same Data 404 Improper Handling of Mixed Encoding 407 Improper Handling of Unicode Encoding 408 Improper Handling of URL Encoding (Hex Encoding) 410 Improper Limitation of a Pathname to a Restricted Directory 31 ('Path Traversal')
                                                                              Improper Resolution of Path Equivalence
81
     Applicable Platforms
Language : Language-Independent (Prevalence = Undetermined) Common Consequences
Scope Impact
Integrity Unexpected State
Potential Mitigations
Phase: Implementation
Strategy = Input Validation
Likelihood
   Assume all input is malicious. Use an "accept known good" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not
 401
CWE-172: Encoding Error
       Nature Type ID Name     Page
              Mapped Taxonomy Name
    Node ID
    Fit
    Mapped Node Name
    CAPEC-ID
    Attack Pattern Name
  CWE Version 4.2
CWE-172: Encoding Error
strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, "boat" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as "red" or "blue." Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.
Phase: Implementation
Strategy = Output Encoding
While it is risky to use dynamically-generated query strings, code, or commands that mix control and data together, sometimes it may be unavoidable. Properly quote arguments and escape any special characters within those arguments. The most conservative approach is to escape or filter all characters that do not pass an extremely strict allowlist (such as everything that is not alphanumeric or white space). If some special characters are still needed, such as white space, wrap each argument in quotes after the escaping/filtering step. Be careful of argument injection (CWE-88).
Phase: Implementation
Strategy = Input Validation
Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.
MemberOf Relationships
This MemberOf relationships table shows additional CWE Catgeories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness fits within the context of external information sources.
   MemberOf 992 SFP Secondary Cluster: Faulty Input Transformation
Notes
Relationship
Partially overlaps path traversal and equivalence weaknesses.
Maintenance
This is more like a category than a weakness.
Maintenance
Many other types of encodings should be listed in this category.
Taxonomy Mappings
PLOVER Encoding Error
Related Attack Patterns
3 Using Leading 'Ghost' Character Sequences to Bypass Input Filters
52 Embedding NULL Bytes
53 Postfix, Null Terminate, and Backslash
888 1988
                     402
CWE-172: Encoding Error

CWE Version 4.2
CWE-173: Improper Handling of Alternate Encoding
64 Using Slashes and URL Encoding Combined to Bypass Validation Logic
71 Using Unicode Encoding to Bypass Validation Logic
72 URL Encoding
78 Using Escaped Slashes in Alternate Encoding
80 Using UTF-8 Encoding to Bypass Validation Logic 120 Double Encoding
267 Leverage Alternate Encoding