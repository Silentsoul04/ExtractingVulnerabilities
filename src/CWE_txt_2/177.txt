CWE-177: Improper Handling of URL Encoding (Hex Encoding)
Description
The software does not properly handle when all or part of an input has been URL encoded.
Relationships
The table(s) below shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOr and give insight to similar items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that may want to be explored.
    410
CWE-177: Improper Handling of URL Encoding (Hex Encoding)
CWE Version 4.2
CWE-177: Improper Handling of URL Encoding (Hex Encoding)
  Relevant to the view "Research Concepts" (CWE-1000)
Nature Type ID Name
Page
401
                  ChildOf
Applicable Platforms
172 Encoding Error
     Language : Language-Independent (Prevalence = Undetermined) Common Consequences
Scope Impact
Integrity Unexpected State
Potential Mitigations
Phase: Architecture and Design
Strategy = Input Validation
Likelihood
              Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names.
Phase: Implementation
Strategy = Input Validation
Assume all input is malicious. Use an "accept known good" input validation strategy, i.e., use
a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, "boat" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as "red" or "blue." Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.
Phase: Implementation
Strategy = Input Validation
Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.
Observed Examples
Reference
CVE-2000-0900
CVE-2005-2256
CVE-2004-2121
CVE-2004-0280 CVE-2003-0424
Description
Hex-encoded path traversal variants - "%2e%2e", "%2e%2e%2f", "%5c%2e %2e"
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0900
Hex-encoded path traversal variants - "%2e%2e", "%2e%2e%2f", "%5c%2e %2e"
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-2256
Hex-encoded path traversal variants - "%2e%2e", "%2e%2e%2f", "%5c%2e %2e"
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-2121
"%20" (encoded space) https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0280
"%20" (encoded space)
                        411
CWE-177: Improper Handling of URL Encoding (Hex Encoding)

Reference Description
Nature Type ID Name     Page
Mapped Taxonomy Name
Node ID
Fit
Mapped Node Name
CAPEC-ID
Attack Pattern Name
  Weakness ID : 178 Status: Incomplete Structure : Simple
CWE Version 4.2
      CVE-2001-0693 CVE-2001-0778 CVE-2002-1831 CVE-2000-0671 CVE-2004-0189 CVE-2002-1291 CVE-2002-1031 CVE-2001-1140 CVE-2004-0760 CVE-2002-1025 CVE-2002-1213 CVE-2004-0072 CVE-2004-0847 CVE-2002-1575
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0424
"%20" (encoded space)
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0693
"%20" (encoded space)
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0778
Crash via hex-encoded space "%20".
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1831
"%00" (encoded null)
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0671
"%00" (encoded null)
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0189
"%00" (encoded null)
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1291
"%00" (encoded null)
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1031
"%00" (encoded null)
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1140
"%00" (encoded null)
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0760
"%00" (encoded null)
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1025
"%2f" (encoded slash)
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1213
"%5c" (encoded backslash) and "%2e" (encoded dot) sequences
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0072
"%5c" (encoded backslash)
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0847
"%0a" (overlaps CRLF)
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1575
                                                      MemberOf Relationships
This MemberOf relationships table shows additional CWE Catgeories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness fits within the context of external information sources.
MemberOf 992 SFP Secondary Cluster: Faulty Input Transformation 888 1988
Taxonomy Mappings
PLOVER URL Encoding (Hex Encoding)
Related Attack Patterns
64 Using Slashes and URL Encoding Combined to Bypass Validation Logic 72 URL Encoding
120 Double Encoding
468 Generic Cross-Browser Cross-Domain Theft
