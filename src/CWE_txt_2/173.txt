CWE-173: Improper Handling of Alternate Encoding
Description
The software does not properly handle when an input uses an alternate encoding that is valid for the control sphere to which the input is being sent.
Relationships
The table(s) below shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOr and give insight to similar items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that may want to be explored.
  
CAPEC-ID
Attack Pattern Name
                        
     Weakness ID : 173 Status: Draft Structure : Simple
Abstraction : Variant
 Relevant to the view "Research Concepts" (CWE-1000)
 
Nature
ChildOf CanPrecede
Type ID
172 289
Name
Encoding Error
Authentication Bypass by Alternate Name
Page
401 640
                 Applicable Platforms
Language : Language-Independent (Prevalence = Undetermined) Common Consequences
Scope Impact
Access Control Bypass Protection Mechanism
Potential Mitigations
Phase: Architecture and Design
Strategy = Input Validation
Likelihood
   Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names.
Phase: Implementation
Strategy = Input Validation
Assume all input is malicious. Use an "accept known good" input validation strategy, i.e., use
a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, "boat" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as "red" or "blue." Do not rely exclusively on looking for
 403
CWE-173: Improper Handling of Alternate Encoding
Nature Type ID Name     Page
Mapped Taxonomy Name
Node ID
Fit
Mapped Node Name
CAPEC-ID
Attack Pattern Name
CWE Version 4.2
CWE-174: Double Decoding of the Same Data
malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.
Phase: Implementation
Strategy = Output Encoding
Use and specify an output encoding that can be handled by the downstream component that
is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not specified, a downstream component may choose a different encoding, either
by assuming a default encoding or automatically inferring which encoding is being used, which can be erroneous. When the encodings are inconsistent, the downstream component might treat some character or byte sequences as special, even if they are not special in the original encoding. Attackers might then be able to exploit this discrepancy and conduct injection attacks; they even might be able to bypass protection mechanisms that assume the original encoding is also being used by the downstream component.
Phase: Implementation
Strategy = Input Validation
Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.
MemberOf Relationships
This MemberOf relationships table shows additional CWE Catgeories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness fits within the context of external information sources.
   MemberOf 884 MemberOf 992
Taxonomy Mappings
PLOVER
Related Attack Patterns
CWE Cross-section
SFP Secondary Cluster: Faulty Input Transformation
Alternate Encoding
884 2070 888 1988
                       3 Using Leading 'Ghost' Character Sequences to Bypass Input Filters
4 Using Alternative IP Address Encodings
52 Embedding NULL Bytes
53 Postfix, Null Terminate, and Backslash
64 Using Slashes and URL Encoding Combined to Bypass Validation Logic
71 Using Unicode Encoding to Bypass Validation Logic
72 URL Encoding
78 Using Escaped Slashes in Alternate Encoding
79 Using Slashes in Alternate Encoding
80 Using UTF-8 Encoding to Bypass Validation Logic
120 Double Encoding
267 Leverage Alternate Encoding